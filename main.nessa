import * from hashmap;

import * from /printing;
import * from /board;
import * from /moves;
import * from /bitboard;
import * from /game;

//Board and flags
let board = board_from_fen("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
let finished = false; 

// Lookup tables
let all_moves_white = get_all_moves(true);
let all_moves_black = get_all_moves(false);
let lookup_tables = get_controlling_lookup_tables();

// Bots
let botW = RandomBot(lookup_tables.demut(), all_moves_white, all_moves_black);
let botB = RandomBot(lookup_tables.demut(), all_moves_white, all_moves_black);

let outcomes = arr<Int>();

outcomes.push(0);
outcomes.push(0);
outcomes.push(0);
outcomes.push(0);

for i in range(0, 100) {
    print("Game ");
    println(*i);

    let game = Game(*botW, *botB, *board);
    let o = game.play(false, lookup_tables.demut());

    outcomes[*o] := outcomes[*o] + 1;
}

print("\nDraws: ");
println(*outcomes[0]);
print("Stalemate: ");
println(*outcomes[1]);
print("White wins: ");
println(*outcomes[2]);
print("Black wins: ");
println(*outcomes[3]);